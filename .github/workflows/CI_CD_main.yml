# This is a basic workflow to help you get started with Actions

name: CI
env: 
     aws_access_key   : "{{ ec2_access_key }}"
     aws_secret_key   : "{{ ec2_secret_key }}"
     PRIVET_KEY       : "{{SSH_PRIVET_KEY}}"  
    # instance_type: t1.micro
    # image: ami-86e0ffe7
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
   
      - name: pwd directory
        run: pwd
      
      - name: list folder 
        run: ls -la 
      
      - name: create file.pem 
        run: echo "${PRIVET_KEY}" > file.pem
      
      - name: chmod 0400 
        run: |
             chmod 0400 file.pem
             ls -la
      - name: chmod 0400 mykeypair.pem
        run:  chmod 0400 ./Ansible/mykeypair.pem
        
      - name: list folder 
        run:  ls -la  
             
      - name: pwd
        run: pwd 
        
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
     
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2.5.0
        with:
          playbook:    playbook_nginx.yaml   file.pem
          Directory: ./Ansible
          # Optional, SSH private key
          
          #options: |
         #   --user ubuntu
         #   --private-key file.pem
         #   --vvv
             
